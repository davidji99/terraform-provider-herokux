// Copyright 2020
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
// Code generated by gen-accessors; DO NOT EDIT.
package kafka

import (
	"time"
)

// GetAddonAttachmentConfigVar returns the AddonAttachmentConfigVar field if it's non-nil, zero value otherwise.
func (c *Cluster) GetAddonAttachmentConfigVar() string {
	if c == nil || c.AddonAttachmentConfigVar == nil {
		return ""
	}
	return *c.AddonAttachmentConfigVar
}

// GetAddonID returns the AddonID field if it's non-nil, zero value otherwise.
func (c *Cluster) GetAddonID() string {
	if c == nil || c.AddonID == nil {
		return ""
	}
	return *c.AddonID
}

// HasAdminTopicNames checks if Cluster has any AdminTopicNames.
func (c *Cluster) HasAdminTopicNames() bool {
	if c == nil || c.AdminTopicNames == nil {
		return false
	}
	if len(c.AdminTopicNames) == 0 {
		return false
	}
	return true
}

// GetBytesInPerSec returns the BytesInPerSec field if it's non-nil, zero value otherwise.
func (c *Cluster) GetBytesInPerSec() int64 {
	if c == nil || c.BytesInPerSec == nil {
		return 0
	}
	return *c.BytesInPerSec
}

// GetBytesOutPerSec returns the BytesOutPerSec field if it's non-nil, zero value otherwise.
func (c *Cluster) GetBytesOutPerSec() int64 {
	if c == nil || c.BytesOutPerSec == nil {
		return 0
	}
	return *c.BytesOutPerSec
}

// GetCapabilities returns the Capabilities field.
func (c *Cluster) GetCapabilities() *ClusterCapabilities {
	if c == nil {
		return nil
	}
	return c.Capabilities
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (c *Cluster) GetCreatedAt() time.Time {
	if c == nil || c.CreatedAt == nil {
		return time.Time{}
	}
	return *c.CreatedAt
}

// GetDataSize returns the DataSize field if it's non-nil, zero value otherwise.
func (c *Cluster) GetDataSize() int64 {
	if c == nil || c.DataSize == nil {
		return 0
	}
	return *c.DataSize
}

// GetDefaults returns the Defaults field.
func (c *Cluster) GetDefaults() *ClusterDefaults {
	if c == nil {
		return nil
	}
	return c.Defaults
}

// GetFormation returns the Formation field.
func (c *Cluster) GetFormation() *ClusterFormation {
	if c == nil {
		return nil
	}
	return c.Formation
}

// GetLimits returns the Limits field.
func (c *Cluster) GetLimits() *ClusterLimits {
	if c == nil {
		return nil
	}
	return c.Limits
}

// GetMessagesInPerSec returns the MessagesInPerSec field if it's non-nil, zero value otherwise.
func (c *Cluster) GetMessagesInPerSec() int64 {
	if c == nil || c.MessagesInPerSec == nil {
		return 0
	}
	return *c.MessagesInPerSec
}

// GetMetaasSource returns the MetaasSource field if it's non-nil, zero value otherwise.
func (c *Cluster) GetMetaasSource() string {
	if c == nil || c.MetaasSource == nil {
		return ""
	}
	return *c.MetaasSource
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (c *Cluster) GetName() string {
	if c == nil || c.Name == nil {
		return ""
	}
	return *c.Name
}

// GetPartitionReplicaCount returns the PartitionReplicaCount field if it's non-nil, zero value otherwise.
func (c *Cluster) GetPartitionReplicaCount() int {
	if c == nil || c.PartitionReplicaCount == nil {
		return 0
	}
	return *c.PartitionReplicaCount
}

// GetRobot returns the Robot field.
func (c *Cluster) GetRobot() *ClusterRobot {
	if c == nil {
		return nil
	}
	return c.Robot
}

// GetSharedCluster returns the SharedCluster field if it's non-nil, zero value otherwise.
func (c *Cluster) GetSharedCluster() bool {
	if c == nil || c.SharedCluster == nil {
		return false
	}
	return *c.SharedCluster
}

// GetState returns the State field.
func (c *Cluster) GetState() *ClusterState {
	if c == nil {
		return nil
	}
	return c.State
}

// GetTopicPrefix returns the TopicPrefix field if it's non-nil, zero value otherwise.
func (c *Cluster) GetTopicPrefix() string {
	if c == nil || c.TopicPrefix == nil {
		return ""
	}
	return *c.TopicPrefix
}

// HasTopics checks if Cluster has any Topics.
func (c *Cluster) HasTopics() bool {
	if c == nil || c.Topics == nil {
		return false
	}
	if len(c.Topics) == 0 {
		return false
	}
	return true
}

// HasVersions checks if Cluster has any Versions.
func (c *Cluster) HasVersions() bool {
	if c == nil || c.Versions == nil {
		return false
	}
	if len(c.Versions) == 0 {
		return false
	}
	return true
}

// GetSupportsMixedCleanupPolicy returns the SupportsMixedCleanupPolicy field if it's non-nil, zero value otherwise.
func (c *ClusterCapabilities) GetSupportsMixedCleanupPolicy() bool {
	if c == nil || c.SupportsMixedCleanupPolicy == nil {
		return false
	}
	return *c.SupportsMixedCleanupPolicy
}

// GetPartitionCount returns the PartitionCount field if it's non-nil, zero value otherwise.
func (c *ClusterDefaults) GetPartitionCount() int {
	if c == nil || c.PartitionCount == nil {
		return 0
	}
	return *c.PartitionCount
}

// GetRetentionTimeMS returns the RetentionTimeMS field if it's non-nil, zero value otherwise.
func (c *ClusterDefaults) GetRetentionTimeMS() int64 {
	if c == nil || c.RetentionTimeMS == nil {
		return 0
	}
	return *c.RetentionTimeMS
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *ClusterFormation) GetID() string {
	if c == nil || c.ID == nil {
		return ""
	}
	return *c.ID
}

// HasKafkaIDs checks if ClusterFormation has any KafkaIDs.
func (c *ClusterFormation) HasKafkaIDs() bool {
	if c == nil || c.KafkaIDs == nil {
		return false
	}
	if len(c.KafkaIDs) == 0 {
		return false
	}
	return true
}

// HasZookeeperIDs checks if ClusterFormation has any ZookeeperIDs.
func (c *ClusterFormation) HasZookeeperIDs() bool {
	if c == nil || c.ZookeeperIDs == nil {
		return false
	}
	if len(c.ZookeeperIDs) == 0 {
		return false
	}
	return true
}

// GetConsumeQuotaBytesPerSecond returns the ConsumeQuotaBytesPerSecond field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetConsumeQuotaBytesPerSecond() int64 {
	if c == nil || c.ConsumeQuotaBytesPerSecond == nil {
		return 0
	}
	return *c.ConsumeQuotaBytesPerSecond
}

// GetDataSize returns the DataSize field.
func (c *ClusterLimits) GetDataSize() *ClusterLimitsDataSize {
	if c == nil {
		return nil
	}
	return c.DataSize
}

// GetMaximumReplication returns the MaximumReplication field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaximumReplication() int {
	if c == nil || c.MaximumReplication == nil {
		return 0
	}
	return *c.MaximumReplication
}

// GetMaximumReplicationMS returns the MaximumReplicationMS field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaximumReplicationMS() int64 {
	if c == nil || c.MaximumReplicationMS == nil {
		return 0
	}
	return *c.MaximumReplicationMS
}

// GetMaxNumberOfPartitionsPerTopic returns the MaxNumberOfPartitionsPerTopic field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaxNumberOfPartitionsPerTopic() int {
	if c == nil || c.MaxNumberOfPartitionsPerTopic == nil {
		return 0
	}
	return *c.MaxNumberOfPartitionsPerTopic
}

// GetMaxNumberOfTopics returns the MaxNumberOfTopics field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaxNumberOfTopics() int {
	if c == nil || c.MaxNumberOfTopics == nil {
		return 0
	}
	return *c.MaxNumberOfTopics
}

// GetMaxNumberOfTotalPartitions returns the MaxNumberOfTotalPartitions field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaxNumberOfTotalPartitions() int {
	if c == nil || c.MaxNumberOfTotalPartitions == nil {
		return 0
	}
	return *c.MaxNumberOfTotalPartitions
}

// GetMaxPartitionReplicaCount returns the MaxPartitionReplicaCount field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaxPartitionReplicaCount() int {
	if c == nil || c.MaxPartitionReplicaCount == nil {
		return 0
	}
	return *c.MaxPartitionReplicaCount
}

// GetMaxTopics returns the MaxTopics field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMaxTopics() int {
	if c == nil || c.MaxTopics == nil {
		return 0
	}
	return *c.MaxTopics
}

// GetMinimumReplication returns the MinimumReplication field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMinimumReplication() int {
	if c == nil || c.MinimumReplication == nil {
		return 0
	}
	return *c.MinimumReplication
}

// GetMinimumReplicationMS returns the MinimumReplicationMS field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetMinimumReplicationMS() int64 {
	if c == nil || c.MinimumReplicationMS == nil {
		return 0
	}
	return *c.MinimumReplicationMS
}

// GetProduceQuotaBytesPerSecond returns the ProduceQuotaBytesPerSecond field if it's non-nil, zero value otherwise.
func (c *ClusterLimits) GetProduceQuotaBytesPerSecond() int64 {
	if c == nil || c.ProduceQuotaBytesPerSecond == nil {
		return 0
	}
	return *c.ProduceQuotaBytesPerSecond
}

// GetCriticalPercentage returns the CriticalPercentage field if it's non-nil, zero value otherwise.
func (c *ClusterLimitsDataSize) GetCriticalPercentage() int {
	if c == nil || c.CriticalPercentage == nil {
		return 0
	}
	return *c.CriticalPercentage
}

// GetLimitByte returns the LimitByte field if it's non-nil, zero value otherwise.
func (c *ClusterLimitsDataSize) GetLimitByte() int64 {
	if c == nil || c.LimitByte == nil {
		return 0
	}
	return *c.LimitByte
}

// GetSubCriticalPercentage returns the SubCriticalPercentage field if it's non-nil, zero value otherwise.
func (c *ClusterLimitsDataSize) GetSubCriticalPercentage() int {
	if c == nil || c.SubCriticalPercentage == nil {
		return 0
	}
	return *c.SubCriticalPercentage
}

// GetSuperCriticalPercentage returns the SuperCriticalPercentage field if it's non-nil, zero value otherwise.
func (c *ClusterLimitsDataSize) GetSuperCriticalPercentage() int {
	if c == nil || c.SuperCriticalPercentage == nil {
		return 0
	}
	return *c.SuperCriticalPercentage
}

// GetIsRobot returns the IsRobot field if it's non-nil, zero value otherwise.
func (c *ClusterRobot) GetIsRobot() bool {
	if c == nil || c.IsRobot == nil {
		return false
	}
	return *c.IsRobot
}

// GetRobotTTL returns the RobotTTL field if it's non-nil, zero value otherwise.
func (c *ClusterRobot) GetRobotTTL() int {
	if c == nil || c.RobotTTL == nil {
		return 0
	}
	return *c.RobotTTL
}

// HasDegradedBrokers checks if ClusterState has any DegradedBrokers.
func (c *ClusterState) HasDegradedBrokers() bool {
	if c == nil || c.DegradedBrokers == nil {
		return false
	}
	if len(c.DegradedBrokers) == 0 {
		return false
	}
	return true
}

// HasDegradedTopics checks if ClusterState has any DegradedTopics.
func (c *ClusterState) HasDegradedTopics() bool {
	if c == nil || c.DegradedTopics == nil {
		return false
	}
	if len(c.DegradedTopics) == 0 {
		return false
	}
	return true
}

// GetHealthy returns the Healthy field if it's non-nil, zero value otherwise.
func (c *ClusterState) GetHealthy() bool {
	if c == nil || c.Healthy == nil {
		return false
	}
	return *c.Healthy
}

// GetMessage returns the Message field if it's non-nil, zero value otherwise.
func (c *ClusterState) GetMessage() string {
	if c == nil || c.Message == nil {
		return ""
	}
	return *c.Message
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (c *ClusterState) GetStatus() string {
	if c == nil || c.Status == nil {
		return ""
	}
	return *c.Status
}

// GetWaiting returns the Waiting field if it's non-nil, zero value otherwise.
func (c *ClusterState) GetWaiting() bool {
	if c == nil || c.Waiting == nil {
		return false
	}
	return *c.Waiting
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *Response) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetMessage returns the Message field if it's non-nil, zero value otherwise.
func (r *Response) GetMessage() string {
	if r == nil || r.Message == nil {
		return ""
	}
	return *r.Message
}

// GetBytesInPerSecond returns the BytesInPerSecond field if it's non-nil, zero value otherwise.
func (t *Topic) GetBytesInPerSecond() int {
	if t == nil || t.BytesInPerSecond == nil {
		return 0
	}
	return *t.BytesInPerSecond
}

// GetBytesOutPerSecond returns the BytesOutPerSecond field if it's non-nil, zero value otherwise.
func (t *Topic) GetBytesOutPerSecond() int {
	if t == nil || t.BytesOutPerSecond == nil {
		return 0
	}
	return *t.BytesOutPerSecond
}

// GetCleanupPolicy returns the CleanupPolicy field if it's non-nil, zero value otherwise.
func (t *Topic) GetCleanupPolicy() string {
	if t == nil || t.CleanupPolicy == nil {
		return ""
	}
	return *t.CleanupPolicy
}

// GetCompaction returns the Compaction field if it's non-nil, zero value otherwise.
func (t *Topic) GetCompaction() bool {
	if t == nil || t.Compaction == nil {
		return false
	}
	return *t.Compaction
}

// GetCompactionEnabled returns the CompactionEnabled field if it's non-nil, zero value otherwise.
func (t *Topic) GetCompactionEnabled() bool {
	if t == nil || t.CompactionEnabled == nil {
		return false
	}
	return *t.CompactionEnabled
}

// GetDataSize returns the DataSize field if it's non-nil, zero value otherwise.
func (t *Topic) GetDataSize() int {
	if t == nil || t.DataSize == nil {
		return 0
	}
	return *t.DataSize
}

// GetMessageInPerSecond returns the MessageInPerSecond field if it's non-nil, zero value otherwise.
func (t *Topic) GetMessageInPerSecond() int {
	if t == nil || t.MessageInPerSecond == nil {
		return 0
	}
	return *t.MessageInPerSecond
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *Topic) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetPartitions returns the Partitions field if it's non-nil, zero value otherwise.
func (t *Topic) GetPartitions() int {
	if t == nil || t.Partitions == nil {
		return 0
	}
	return *t.Partitions
}

// GetPrefix returns the Prefix field if it's non-nil, zero value otherwise.
func (t *Topic) GetPrefix() string {
	if t == nil || t.Prefix == nil {
		return ""
	}
	return *t.Prefix
}

// GetReplacementFactor returns the ReplacementFactor field if it's non-nil, zero value otherwise.
func (t *Topic) GetReplacementFactor() int {
	if t == nil || t.ReplacementFactor == nil {
		return 0
	}
	return *t.ReplacementFactor
}

// GetRetentionEnabled returns the RetentionEnabled field if it's non-nil, zero value otherwise.
func (t *Topic) GetRetentionEnabled() bool {
	if t == nil || t.RetentionEnabled == nil {
		return false
	}
	return *t.RetentionEnabled
}

// GetRetentionTimeInMS returns the RetentionTimeInMS field if it's non-nil, zero value otherwise.
func (t *Topic) GetRetentionTimeInMS() int {
	if t == nil || t.RetentionTimeInMS == nil {
		return 0
	}
	return *t.RetentionTimeInMS
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (t *Topic) GetStatus() string {
	if t == nil || t.Status == nil {
		return ""
	}
	return *t.Status
}

// GetStatusLabel returns the StatusLabel field if it's non-nil, zero value otherwise.
func (t *Topic) GetStatusLabel() string {
	if t == nil || t.StatusLabel == nil {
		return ""
	}
	return *t.StatusLabel
}

// GetMaxTopics returns the MaxTopics field if it's non-nil, zero value otherwise.
func (t *TopicLimits) GetMaxTopics() int {
	if t == nil || t.MaxTopics == nil {
		return 0
	}
	return *t.MaxTopics
}

// GetAddonAttachmentConfigVar returns the AddonAttachmentConfigVar field if it's non-nil, zero value otherwise.
func (t *Topics) GetAddonAttachmentConfigVar() string {
	if t == nil || t.AddonAttachmentConfigVar == nil {
		return ""
	}
	return *t.AddonAttachmentConfigVar
}

// GetLimits returns the Limits field.
func (t *Topics) GetLimits() *TopicLimits {
	if t == nil {
		return nil
	}
	return t.Limits
}

// GetPrefix returns the Prefix field if it's non-nil, zero value otherwise.
func (t *Topics) GetPrefix() string {
	if t == nil || t.Prefix == nil {
		return ""
	}
	return *t.Prefix
}

// HasTopics checks if Topics has any Topics.
func (t *Topics) HasTopics() bool {
	if t == nil || t.Topics == nil {
		return false
	}
	if len(t.Topics) == 0 {
		return false
	}
	return true
}
