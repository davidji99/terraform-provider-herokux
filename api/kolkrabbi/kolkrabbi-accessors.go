// Copyright 2020
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
// Code generated by gen-accessors; DO NOT EDIT.
package kolkrabbi

import (
	"time"
)

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (a *AccountInfo) GetCreatedAt() time.Time {
	if a == nil || a.CreatedAt == nil {
		return time.Time{}
	}
	return *a.CreatedAt
}

// GetGithub returns the Github field.
func (a *AccountInfo) GetGithub() *AccountInfoGithub {
	if a == nil {
		return nil
	}
	return a.Github
}

// GetHeroku returns the Heroku field.
func (a *AccountInfo) GetHeroku() *AccountInfoHeroku {
	if a == nil {
		return nil
	}
	return a.Heroku
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (a *AccountInfo) GetID() string {
	if a == nil || a.ID == nil {
		return ""
	}
	return *a.ID
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (a *AccountInfo) GetUpdatedAt() time.Time {
	if a == nil || a.UpdatedAt == nil {
		return time.Time{}
	}
	return *a.UpdatedAt
}

// GetToken returns the Token field if it's non-nil, zero value otherwise.
func (a *AccountInfoGithub) GetToken() string {
	if a == nil || a.Token == nil {
		return ""
	}
	return *a.Token
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (a *AccountInfoGithub) GetUserID() int {
	if a == nil || a.UserID == nil {
		return 0
	}
	return *a.UserID
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (a *AccountInfoHeroku) GetUserID() string {
	if a == nil || a.UserID == nil {
		return ""
	}
	return *a.UserID
}

// GetAppID returns the AppID field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetAppID() string {
	if a == nil || a.AppID == nil {
		return ""
	}
	return *a.AppID
}

// GetAutoDeploy returns the AutoDeploy field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetAutoDeploy() bool {
	if a == nil || a.AutoDeploy == nil {
		return false
	}
	return *a.AutoDeploy
}

// GetBranch returns the Branch field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetBranch() string {
	if a == nil || a.Branch == nil {
		return ""
	}
	return *a.Branch
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetCreatedAt() time.Time {
	if a == nil || a.CreatedAt == nil {
		return time.Time{}
	}
	return *a.CreatedAt
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetID() string {
	if a == nil || a.ID == nil {
		return ""
	}
	return *a.ID
}

// GetOwner returns the Owner field.
func (a *AppGHIntegration) GetOwner() *PipelineGHIntegrationUser {
	if a == nil {
		return nil
	}
	return a.Owner
}

// GetRepo returns the Repo field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetRepo() string {
	if a == nil || a.Repo == nil {
		return ""
	}
	return *a.Repo
}

// GetRepoID returns the RepoID field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetRepoID() int {
	if a == nil || a.RepoID == nil {
		return 0
	}
	return *a.RepoID
}

// GetStaleDays returns the StaleDays field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetStaleDays() int {
	if a == nil || a.StaleDays == nil {
		return 0
	}
	return *a.StaleDays
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetUpdatedAt() time.Time {
	if a == nil || a.UpdatedAt == nil {
		return time.Time{}
	}
	return *a.UpdatedAt
}

// GetWaitForCI returns the WaitForCI field if it's non-nil, zero value otherwise.
func (a *AppGHIntegration) GetWaitForCI() bool {
	if a == nil || a.WaitForCI == nil {
		return false
	}
	return *a.WaitForCI
}

// GetAutoDeploy returns the AutoDeploy field if it's non-nil, zero value otherwise.
func (a *AppGhIntegrationRequest) GetAutoDeploy() bool {
	if a == nil || a.AutoDeploy == nil {
		return false
	}
	return *a.AutoDeploy
}

// GetWaitForCI returns the WaitForCI field if it's non-nil, zero value otherwise.
func (a *AppGhIntegrationRequest) GetWaitForCI() bool {
	if a == nil || a.WaitForCI == nil {
		return false
	}
	return *a.WaitForCI
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *Pipeline) GetID() string {
	if p == nil || p.ID == nil {
		return ""
	}
	return *p.ID
}

// GetCI returns the CI field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegration) GetCI() bool {
	if p == nil || p.CI == nil {
		return false
	}
	return *p.CI
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegration) GetCreatedAt() time.Time {
	if p == nil || p.CreatedAt == nil {
		return time.Time{}
	}
	return *p.CreatedAt
}

// GetCreator returns the Creator field.
func (p *PipelineGHIntegration) GetCreator() *PipelineGHIntegrationUser {
	if p == nil {
		return nil
	}
	return p.Creator
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegration) GetID() string {
	if p == nil || p.ID == nil {
		return ""
	}
	return *p.ID
}

// GetOwner returns the Owner field.
func (p *PipelineGHIntegration) GetOwner() *PipelineGHIntegrationUser {
	if p == nil {
		return nil
	}
	return p.Owner
}

// GetPipeline returns the Pipeline field.
func (p *PipelineGHIntegration) GetPipeline() *Pipeline {
	if p == nil {
		return nil
	}
	return p.Pipeline
}

// GetRepository returns the Repository field.
func (p *PipelineGHIntegration) GetRepository() *PipelineRepository {
	if p == nil {
		return nil
	}
	return p.Repository
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegration) GetUpdatedAt() time.Time {
	if p == nil || p.UpdatedAt == nil {
		return time.Time{}
	}
	return *p.UpdatedAt
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegrationGithubUser) GetUserID() int {
	if p == nil || p.UserID == nil {
		return 0
	}
	return *p.UserID
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegrationHerokuUser) GetUserID() string {
	if p == nil || p.UserID == nil {
		return ""
	}
	return *p.UserID
}

// GetGithub returns the Github field.
func (p *PipelineGHIntegrationUser) GetGithub() *PipelineGHIntegrationGithubUser {
	if p == nil {
		return nil
	}
	return p.Github
}

// GetHeroku returns the Heroku field.
func (p *PipelineGHIntegrationUser) GetHeroku() *PipelineGHIntegrationHerokuUser {
	if p == nil {
		return nil
	}
	return p.Heroku
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *PipelineGHIntegrationUser) GetID() string {
	if p == nil || p.ID == nil {
		return ""
	}
	return *p.ID
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (p *PipelineRepository) GetCreatedAt() time.Time {
	if p == nil || p.CreatedAt == nil {
		return time.Time{}
	}
	return *p.CreatedAt
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *PipelineRepository) GetID() int {
	if p == nil || p.ID == nil {
		return 0
	}
	return *p.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (p *PipelineRepository) GetName() string {
	if p == nil || p.Name == nil {
		return ""
	}
	return *p.Name
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (p *PipelineRepository) GetType() string {
	if p == nil || p.Type == nil {
		return ""
	}
	return *p.Type
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (p *PipelineRepository) GetUpdatedAt() time.Time {
	if p == nil || p.UpdatedAt == nil {
		return time.Time{}
	}
	return *p.UpdatedAt
}
