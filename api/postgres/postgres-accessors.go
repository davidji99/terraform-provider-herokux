// Copyright 2020
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
// Code generated by gen-accessors; DO NOT EDIT.
package postgres

import (
	"time"
)

// HasCredentials checks if Credential has any Credentials.
func (c *Credential) HasCredentials() bool {
	if c == nil || c.Credentials == nil {
		return false
	}
	if len(c.Credentials) == 0 {
		return false
	}
	return true
}

// GetDatabase returns the Database field if it's non-nil, zero value otherwise.
func (c *Credential) GetDatabase() string {
	if c == nil || c.Database == nil {
		return ""
	}
	return *c.Database
}

// GetHost returns the Host field if it's non-nil, zero value otherwise.
func (c *Credential) GetHost() string {
	if c == nil || c.Host == nil {
		return ""
	}
	return *c.Host
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *Credential) GetID() string {
	if c == nil || c.ID == nil {
		return ""
	}
	return *c.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (c *Credential) GetName() string {
	if c == nil || c.Name == nil {
		return ""
	}
	return *c.Name
}

// GetPort returns the Port field if it's non-nil, zero value otherwise.
func (c *Credential) GetPort() int {
	if c == nil || c.Port == nil {
		return 0
	}
	return *c.Port
}

// GetPassword returns the Password field if it's non-nil, zero value otherwise.
func (c *CredentialSecret) GetPassword() string {
	if c == nil || c.Password == nil {
		return ""
	}
	return *c.Password
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (c *CredentialSecret) GetState() string {
	if c == nil || c.State == nil {
		return ""
	}
	return *c.State
}

// GetUser returns the User field if it's non-nil, zero value otherwise.
func (c *CredentialSecret) GetUser() string {
	if c == nil || c.User == nil {
		return ""
	}
	return *c.User
}

// GetAddonID returns the AddonID field if it's non-nil, zero value otherwise.
func (d *Database) GetAddonID() string {
	if d == nil || d.AddonID == nil {
		return ""
	}
	return *d.AddonID
}

// GetAvailableForIngress returns the AvailableForIngress field if it's non-nil, zero value otherwise.
func (d *Database) GetAvailableForIngress() bool {
	if d == nil || d.AvailableForIngress == nil {
		return false
	}
	return *d.AvailableForIngress
}

// GetFollowing returns the Following field if it's non-nil, zero value otherwise.
func (d *Database) GetFollowing() string {
	if d == nil || d.Following == nil {
		return ""
	}
	return *d.Following
}

// GetHerokuResourceID returns the HerokuResourceID field if it's non-nil, zero value otherwise.
func (d *Database) GetHerokuResourceID() string {
	if d == nil || d.HerokuResourceID == nil {
		return ""
	}
	return *d.HerokuResourceID
}

// GetHotStandby returns the HotStandby field if it's non-nil, zero value otherwise.
func (d *Database) GetHotStandby() bool {
	if d == nil || d.HotStandby == nil {
		return false
	}
	return *d.HotStandby
}

// HasInfo checks if Database has any Info.
func (d *Database) HasInfo() bool {
	if d == nil || d.Info == nil {
		return false
	}
	if len(d.Info) == 0 {
		return false
	}
	return true
}

// GetLeader returns the Leader field.
func (d *Database) GetLeader() *DatabaseLeader {
	if d == nil {
		return nil
	}
	return d.Leader
}

// GetMetaasSource returns the MetaasSource field if it's non-nil, zero value otherwise.
func (d *Database) GetMetaasSource() string {
	if d == nil || d.MetaasSource == nil {
		return ""
	}
	return *d.MetaasSource
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *Database) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetPostgresVersion returns the PostgresVersion field if it's non-nil, zero value otherwise.
func (d *Database) GetPostgresVersion() string {
	if d == nil || d.PostgresVersion == nil {
		return ""
	}
	return *d.PostgresVersion
}

// GetResourceURL returns the ResourceURL field if it's non-nil, zero value otherwise.
func (d *Database) GetResourceURL() string {
	if d == nil || d.ResourceURL == nil {
		return ""
	}
	return *d.ResourceURL
}

// GetWaiting returns the Waiting field if it's non-nil, zero value otherwise.
func (d *Database) GetWaiting() bool {
	if d == nil || d.Waiting == nil {
		return false
	}
	return *d.Waiting
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DatabaseInfo) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetResolveDBName returns the ResolveDBName field if it's non-nil, zero value otherwise.
func (d *DatabaseInfo) GetResolveDBName() bool {
	if d == nil || d.ResolveDBName == nil {
		return false
	}
	return *d.ResolveDBName
}

// HasValues checks if DatabaseInfo has any Values.
func (d *DatabaseInfo) HasValues() bool {
	if d == nil || d.Values == nil {
		return false
	}
	if len(d.Values) == 0 {
		return false
	}
	return true
}

// GetAddonID returns the AddonID field if it's non-nil, zero value otherwise.
func (d *DatabaseLeader) GetAddonID() string {
	if d == nil || d.AddonID == nil {
		return ""
	}
	return *d.AddonID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DatabaseLeader) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetIsWaiting returns the IsWaiting field if it's non-nil, zero value otherwise.
func (d *DatabaseWaitStatus) GetIsWaiting() string {
	if d == nil || d.IsWaiting == nil {
		return ""
	}
	return *d.IsWaiting
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (d *DatabaseWaitStatus) GetStatus() string {
	if d == nil || d.Status == nil {
		return ""
	}
	return *d.Status
}

// HasExcludedColumns checks if DataConnector has any ExcludedColumns.
func (d *DataConnector) HasExcludedColumns() bool {
	if d == nil || d.ExcludedColumns == nil {
		return false
	}
	if len(d.ExcludedColumns) == 0 {
		return false
	}
	return true
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DataConnector) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetKafkaAddon returns the KafkaAddon field.
func (d *DataConnector) GetKafkaAddon() *DataConnectorKafkaAddon {
	if d == nil {
		return nil
	}
	return d.KafkaAddon
}

// GetKafkaApp returns the KafkaApp field.
func (d *DataConnector) GetKafkaApp() *DataConnectorKafkaApp {
	if d == nil {
		return nil
	}
	return d.KafkaApp
}

// GetLag returns the Lag field if it's non-nil, zero value otherwise.
func (d *DataConnector) GetLag() string {
	if d == nil || d.Lag == nil {
		return ""
	}
	return *d.Lag
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataConnector) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetPostgresAddon returns the PostgresAddon field.
func (d *DataConnector) GetPostgresAddon() *DataConnectorPostgresAddon {
	if d == nil {
		return nil
	}
	return d.PostgresAddon
}

// GetPostgresApp returns the PostgresApp field.
func (d *DataConnector) GetPostgresApp() *DataConnectorPostgresApp {
	if d == nil {
		return nil
	}
	return d.PostgresApp
}

// HasTables checks if DataConnector has any Tables.
func (d *DataConnector) HasTables() bool {
	if d == nil || d.Tables == nil {
		return false
	}
	if len(d.Tables) == 0 {
		return false
	}
	return true
}

// HasTopics checks if DataConnector has any Topics.
func (d *DataConnector) HasTopics() bool {
	if d == nil || d.Topics == nil {
		return false
	}
	if len(d.Topics) == 0 {
		return false
	}
	return true
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DataConnectorKafkaAddon) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataConnectorKafkaAddon) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataConnectorKafkaApp) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DataConnectorPostgresAddon) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataConnectorPostgresAddon) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataConnectorPostgresApp) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetTableName returns the TableName field if it's non-nil, zero value otherwise.
func (d *DataConnectorTopic) GetTableName() string {
	if d == nil || d.TableName == nil {
		return ""
	}
	return *d.TableName
}

// GetTopicName returns the TopicName field if it's non-nil, zero value otherwise.
func (d *DataConnectorTopic) GetTopicName() string {
	if d == nil || d.TopicName == nil {
		return ""
	}
	return *d.TopicName
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (d *DataLink) GetCreatedAt() time.Time {
	if d == nil || d.CreatedAt == nil {
		return time.Time{}
	}
	return *d.CreatedAt
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DataLink) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataLink) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetRemote returns the Remote field.
func (d *DataLink) GetRemote() *DataLinkRemote {
	if d == nil {
		return nil
	}
	return d.Remote
}

// GetRemoteName returns the RemoteName field if it's non-nil, zero value otherwise.
func (d *DataLink) GetRemoteName() string {
	if d == nil || d.RemoteName == nil {
		return ""
	}
	return *d.RemoteName
}

// GetAttachmentName returns the AttachmentName field if it's non-nil, zero value otherwise.
func (d *DataLinkRemote) GetAttachmentName() string {
	if d == nil || d.AttachmentName == nil {
		return ""
	}
	return *d.AttachmentName
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DataLinkRemote) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GenericResponse) GetID() string {
	if g == nil || g.ID == nil {
		return ""
	}
	return *g.ID
}

// GetMessage returns the Message field if it's non-nil, zero value otherwise.
func (g *GenericResponse) GetMessage() string {
	if g == nil || g.Message == nil {
		return ""
	}
	return *g.Message
}

// GetDefault returns the Default field if it's non-nil, zero value otherwise.
func (l *LogConnections) GetDefault() bool {
	if l == nil || l.Default == nil {
		return false
	}
	return *l.Default
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (l *LogConnections) GetDescription() string {
	if l == nil || l.Description == nil {
		return ""
	}
	return *l.Description
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (l *LogConnections) GetValue() bool {
	if l == nil || l.Value == nil {
		return false
	}
	return *l.Value
}

// GetDefault returns the Default field if it's non-nil, zero value otherwise.
func (l *LogLockWaits) GetDefault() bool {
	if l == nil || l.Default == nil {
		return false
	}
	return *l.Default
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (l *LogLockWaits) GetDescription() string {
	if l == nil || l.Description == nil {
		return ""
	}
	return *l.Description
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (l *LogLockWaits) GetValue() bool {
	if l == nil || l.Value == nil {
		return false
	}
	return *l.Value
}

// GetDefault returns the Default field if it's non-nil, zero value otherwise.
func (l *LogMinDurationStatement) GetDefault() int {
	if l == nil || l.Default == nil {
		return 0
	}
	return *l.Default
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (l *LogMinDurationStatement) GetDescription() string {
	if l == nil || l.Description == nil {
		return ""
	}
	return *l.Description
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (l *LogMinDurationStatement) GetValue() int {
	if l == nil || l.Value == nil {
		return 0
	}
	return *l.Value
}

// GetDefault returns the Default field if it's non-nil, zero value otherwise.
func (l *LogStatement) GetDefault() string {
	if l == nil || l.Default == nil {
		return ""
	}
	return *l.Default
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (l *LogStatement) GetDescription() string {
	if l == nil || l.Description == nil {
		return ""
	}
	return *l.Description
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (l *LogStatement) GetValue() string {
	if l == nil || l.Value == nil {
		return ""
	}
	return *l.Value
}

// GetValues returns the Values field.
func (l *LogStatement) GetValues() *LogStatementValues {
	if l == nil {
		return nil
	}
	return l.Values
}

// GetAll returns the All field if it's non-nil, zero value otherwise.
func (l *LogStatementValues) GetAll() string {
	if l == nil || l.All == nil {
		return ""
	}
	return *l.All
}

// GetDDL returns the DDL field if it's non-nil, zero value otherwise.
func (l *LogStatementValues) GetDDL() string {
	if l == nil || l.DDL == nil {
		return ""
	}
	return *l.DDL
}

// GetMod returns the Mod field if it's non-nil, zero value otherwise.
func (l *LogStatementValues) GetMod() string {
	if l == nil || l.Mod == nil {
		return ""
	}
	return *l.Mod
}

// GetNone returns the None field if it's non-nil, zero value otherwise.
func (l *LogStatementValues) GetNone() string {
	if l == nil || l.None == nil {
		return ""
	}
	return *l.None
}

// GetWindow returns the Window field if it's non-nil, zero value otherwise.
func (m *MaintenanceWindowResponse) GetWindow() string {
	if m == nil || m.Window == nil {
		return ""
	}
	return *m.Window
}

// HasActiveIPRules checks if MTLS has any ActiveIPRules.
func (m *MTLS) HasActiveIPRules() bool {
	if m == nil || m.ActiveIPRules == nil {
		return false
	}
	if len(m.ActiveIPRules) == 0 {
		return false
	}
	return true
}

// GetAddon returns the Addon field if it's non-nil, zero value otherwise.
func (m *MTLS) GetAddon() string {
	if m == nil || m.Addon == nil {
		return ""
	}
	return *m.Addon
}

// GetApp returns the App field if it's non-nil, zero value otherwise.
func (m *MTLS) GetApp() string {
	if m == nil || m.App == nil {
		return ""
	}
	return *m.App
}

// GetCertificateAuthorityChain returns the CertificateAuthorityChain field if it's non-nil, zero value otherwise.
func (m *MTLS) GetCertificateAuthorityChain() string {
	if m == nil || m.CertificateAuthorityChain == nil {
		return ""
	}
	return *m.CertificateAuthorityChain
}

// GetEnabledBy returns the EnabledBy field if it's non-nil, zero value otherwise.
func (m *MTLS) GetEnabledBy() string {
	if m == nil || m.EnabledBy == nil {
		return ""
	}
	return *m.EnabledBy
}

// GetStatus returns the Status field.
func (m *MTLS) GetStatus() *MTLSConfigStatus {
	if m == nil {
		return nil
	}
	return m.Status
}

// GetCertificateWithChain returns the CertificateWithChain field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetCertificateWithChain() string {
	if m == nil || m.CertificateWithChain == nil {
		return ""
	}
	return *m.CertificateWithChain
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return *m.CreatedAt
}

// GetExpiresAt returns the ExpiresAt field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetExpiresAt() time.Time {
	if m == nil || m.ExpiresAt == nil {
		return time.Time{}
	}
	return *m.ExpiresAt
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetID() string {
	if m == nil || m.ID == nil {
		return ""
	}
	return *m.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetName() string {
	if m == nil || m.Name == nil {
		return ""
	}
	return *m.Name
}

// GetPrivateKey returns the PrivateKey field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetPrivateKey() string {
	if m == nil || m.PrivateKey == nil {
		return ""
	}
	return *m.PrivateKey
}

// GetStatus returns the Status field.
func (m *MTLSCert) GetStatus() *MTLSCertStatus {
	if m == nil {
		return nil
	}
	return m.Status
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (m *MTLSCert) GetUpdatedAt() time.Time {
	if m == nil || m.UpdatedAt == nil {
		return time.Time{}
	}
	return *m.UpdatedAt
}

// GetCIDR returns the CIDR field if it's non-nil, zero value otherwise.
func (m *MTLSIPRule) GetCIDR() string {
	if m == nil || m.CIDR == nil {
		return ""
	}
	return *m.CIDR
}

// GetCreatedAt returns the CreatedAt field if it's non-nil, zero value otherwise.
func (m *MTLSIPRule) GetCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return *m.CreatedAt
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (m *MTLSIPRule) GetDescription() string {
	if m == nil || m.Description == nil {
		return ""
	}
	return *m.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (m *MTLSIPRule) GetID() string {
	if m == nil || m.ID == nil {
		return ""
	}
	return *m.ID
}

// GetStatus returns the Status field.
func (m *MTLSIPRule) GetStatus() *MTLSIPRuleStatus {
	if m == nil {
		return nil
	}
	return m.Status
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (m *MTLSIPRule) GetUpdatedAt() time.Time {
	if m == nil || m.UpdatedAt == nil {
		return time.Time{}
	}
	return *m.UpdatedAt
}

// GetAddon returns the Addon field.
func (p *Privatelink) GetAddon() *PrivatelinkAddon {
	if p == nil {
		return nil
	}
	return p.Addon
}

// HasAllowedAccounts checks if Privatelink has any AllowedAccounts.
func (p *Privatelink) HasAllowedAccounts() bool {
	if p == nil || p.AllowedAccounts == nil {
		return false
	}
	if len(p.AllowedAccounts) == 0 {
		return false
	}
	return true
}

// GetApp returns the App field.
func (p *Privatelink) GetApp() *PrivatelinkApp {
	if p == nil {
		return nil
	}
	return p.App
}

// HasConnections checks if Privatelink has any Connections.
func (p *Privatelink) HasConnections() bool {
	if p == nil || p.Connections == nil {
		return false
	}
	if len(p.Connections) == 0 {
		return false
	}
	return true
}

// GetServiceName returns the ServiceName field if it's non-nil, zero value otherwise.
func (p *Privatelink) GetServiceName() string {
	if p == nil || p.ServiceName == nil {
		return ""
	}
	return *p.ServiceName
}

// HasWhitelistedAccounts checks if Privatelink has any WhitelistedAccounts.
func (p *Privatelink) HasWhitelistedAccounts() bool {
	if p == nil || p.WhitelistedAccounts == nil {
		return false
	}
	if len(p.WhitelistedAccounts) == 0 {
		return false
	}
	return true
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (p *PrivatelinkAddon) GetName() string {
	if p == nil || p.Name == nil {
		return ""
	}
	return *p.Name
}

// GetUUID returns the UUID field if it's non-nil, zero value otherwise.
func (p *PrivatelinkAddon) GetUUID() string {
	if p == nil || p.UUID == nil {
		return ""
	}
	return *p.UUID
}

// GetAccountID returns the AccountID field if it's non-nil, zero value otherwise.
func (p *PrivatelinkAllowedAccounts) GetAccountID() string {
	if p == nil || p.AccountID == nil {
		return ""
	}
	return *p.AccountID
}

// GetARN returns the ARN field if it's non-nil, zero value otherwise.
func (p *PrivatelinkAllowedAccounts) GetARN() string {
	if p == nil || p.ARN == nil {
		return ""
	}
	return *p.ARN
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (p *PrivatelinkApp) GetName() string {
	if p == nil || p.Name == nil {
		return ""
	}
	return *p.Name
}

// GetEndpointID returns the EndpointID field if it's non-nil, zero value otherwise.
func (p *PrivatelinkConnections) GetEndpointID() string {
	if p == nil || p.EndpointID == nil {
		return ""
	}
	return *p.EndpointID
}

// GetHostname returns the Hostname field if it's non-nil, zero value otherwise.
func (p *PrivatelinkConnections) GetHostname() string {
	if p == nil || p.Hostname == nil {
		return ""
	}
	return *p.Hostname
}

// GetOwnerARN returns the OwnerARN field if it's non-nil, zero value otherwise.
func (p *PrivatelinkConnections) GetOwnerARN() string {
	if p == nil || p.OwnerARN == nil {
		return ""
	}
	return *p.OwnerARN
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (p *PrivatelinkConnections) GetStatus() string {
	if p == nil || p.Status == nil {
		return ""
	}
	return *p.Status
}

// HasAllowedAccounts checks if PrivatelinkRequest has any AllowedAccounts.
func (p *PrivatelinkRequest) HasAllowedAccounts() bool {
	if p == nil || p.AllowedAccounts == nil {
		return false
	}
	if len(p.AllowedAccounts) == 0 {
		return false
	}
	return true
}

// GetLogConnections returns the LogConnections field.
func (s *Settings) GetLogConnections() *LogConnections {
	if s == nil {
		return nil
	}
	return s.LogConnections
}

// GetLogLockWaits returns the LogLockWaits field.
func (s *Settings) GetLogLockWaits() *LogLockWaits {
	if s == nil {
		return nil
	}
	return s.LogLockWaits
}

// GetLogMinDurationStatement returns the LogMinDurationStatement field.
func (s *Settings) GetLogMinDurationStatement() *LogMinDurationStatement {
	if s == nil {
		return nil
	}
	return s.LogMinDurationStatement
}

// GetLogStatement returns the LogStatement field.
func (s *Settings) GetLogStatement() *LogStatement {
	if s == nil {
		return nil
	}
	return s.LogStatement
}

// GetLogConnections returns the LogConnections field if it's non-nil, zero value otherwise.
func (s *SettingsRequest) GetLogConnections() bool {
	if s == nil || s.LogConnections == nil {
		return false
	}
	return *s.LogConnections
}

// GetLogLockWaits returns the LogLockWaits field if it's non-nil, zero value otherwise.
func (s *SettingsRequest) GetLogLockWaits() bool {
	if s == nil || s.LogLockWaits == nil {
		return false
	}
	return *s.LogLockWaits
}
